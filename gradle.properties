
# PROJECT ----------------------------------------------------------------------

group = org.jarhc
version = 3.0.0-SNAPSHOT
description = JarHC - JAR Health Check

# GRADLE SETTINGS --------------------------------------------------------------

# display warnings when using deprecated features
org.gradle.warning.mode = all

# increase memory limits for the daemon process
org.gradle.jvmargs = -Xmx1024m -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=1024m

# disable colors and progress indicator
#org.gradle.console = plain

# RUNTIME ----------------------------------------------------------------------

# URL pattern for Maven Search API ("%s" will be replaced with SHA1 checksum)
jarhc.search.url = https://search.maven.org/solrsearch/select?q=1:%%22%s%%22&rows=20&wt=json

# timout in seconds for Maven Search API
# IMPORTANT: Maven Search API often requires 15, 30, or even 45 seconds to respond
jarhc.search.timeout = 65

# user agent for Maven Search API
jarhc.search.headers.User-Agent = Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:129.0) Gecko/20100101 Firefox/129.0

# enable tests for logging configuration
#jarhc.logging.test.enabled = true

# TESTS ------------------------------------------------------------------------

# skip tests
#skip.tests = true

# override JarHC version number
# (used make output of tests more predictable)
#jarhc.version.override = 0.0.1

# instruct tests to re-generate their test resources
#jarhc.test.resources.generate = true

# RELEASE TESTS ----------------------------------------------------------------

# filter to include docker images in release tests
# special values: 'all' and 'none'
#jarhc.test.docker.filter = eclipse-temurin

# instruct tests to re-generate their test resources
#jarhc.test.resources.generate = true

# specify the user used in docker container:
# - same = map current user to container user
# - root = run as root user
# - none = use default user (usually root)
#jarhc.test.docker.user = same

# BENCHMARKS -------------------------------------------------------------------

# JMH benchmarks to execute
#benchmarks =

# PUBLISH ----------------------------------------------------------------------

# Sonar token
# alternative: environment variable SONAR_TOKEN
# (see ~/.gradle/gradle.properties)
#systemProp.sonar.token =

# signing information
# (see ~/.gradle/gradle.properties)
#signing.keyId =
#signing.password =
#signing.secretKeyRingFile =

# credentials for Sonatype OSSRH
# (see ~/.gradle/gradle.properties)
#sonatypeUsername =
#sonatypePassword =
